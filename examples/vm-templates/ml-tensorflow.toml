# Nova VM Template: TensorFlow ML Workstation
# Optimized for: TensorFlow/Keras training, TPU simulation, production ML pipelines

project = "ml-tensorflow-workstation"

[vm.ml-tensorflow]
# Base configuration
image = "/var/lib/nova/images/ubuntu-22.04-ml.qcow2"
cpu = 16
memory = "32Gi"

# GPU Configuration
gpu_passthrough = true
gpu_mode = "auto"
multi_gpu = false  # Set true for multi-GPU training

# Display
display = "spice"

# Network
network = "bridge0"

# Storage
disks = [
    { path = "/var/lib/nova/images/ml-tensorflow.qcow2", size = "100G", type = "system" },
    { path = "/var/lib/nova/datasets", size = "500G", type = "data" },
    { path = "/var/lib/nova/models", size = "200G", type = "models" }
]

# Performance tuning
cpu_mode = "host-passthrough"
hugepages = true

# NVIDIA optimizations for TensorFlow
[vm.ml-tensorflow.nvidia]
cuda_version = "12.1"
cudnn_version = "8.9"
tensorrt = true  # Enable TensorRT for inference optimization
nvidia_driver = "open"
mixed_precision = true  # Enable mixed precision training

# Pre-installed software
[vm.ml-tensorflow.software]
packages = [
    "python3.11",
    "python3-pip",
    "build-essential",
    "git",
    "tmux",
    "nvtop",
]

python_packages = [
    "tensorflow[and-cuda]==2.15.0",
    "keras==3.0.0",
    "tf-keras",
    "tensorboard",
    "tensorflow-datasets",
    "tensorflow-hub",
    "tensorflow-addons",
    "jupyter",
    "jupyterlab",
    "pandas",
    "numpy",
    "matplotlib",
    "scikit-learn",
    "opencv-python",
    "pillow",
]

# TensorBoard service
[container.tensorboard]
capsule = "tensorflow/tensorflow:latest-gpu"
ports = ["6006:6006"]
volumes = ["./logs:/logs"]
network = "nova-ml"
gpu_access = true

# MLflow for experiment tracking
[container.mlflow]
capsule = "ghcr.io/mlflow/mlflow:latest"
ports = ["5000:5000"]
volumes = ["./mlflow:/mlflow"]
network = "nova-ml"

# Network
[network.nova-ml]
type = "bridge"
subnet = "192.168.100.0/24"
dhcp = true

# Cloud-init configuration
[vm.ml-tensorflow.cloud_init]
user_data = """
#cloud-config
users:
  - name: tfuser
    groups: sudo, docker
    shell: /bin/bash
    sudo: ['ALL=(ALL) NOPASSWD:ALL']

runcmd:
  # Install CUDA
  - wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.0-1_all.deb
  - dpkg -i cuda-keyring_1.0-1_all.deb
  - apt-get update
  - apt-get install -y cuda-toolkit-12-1 nvidia-open

  # Install cuDNN
  - apt-get install -y libcudnn8 libcudnn8-dev

  # Install TensorRT
  - apt-get install -y libnvinfer8 libnvinfer-dev

  # Configure environment
  - echo 'export PATH=/usr/local/cuda-12.1/bin:$PATH' >> /home/tfuser/.bashrc
  - echo 'export LD_LIBRARY_PATH=/usr/local/cuda-12.1/lib64:$LD_LIBRARY_PATH' >> /home/tfuser/.bashrc
  - echo 'export TF_FORCE_GPU_ALLOW_GROWTH=true' >> /home/tfuser/.bashrc

  # Set up Python environment
  - su - tfuser -c "python3 -m venv /home/tfuser/tfenv"
  - su - tfuser -c "/home/tfuser/tfenv/bin/pip install --upgrade pip"
  - su - tfuser -c "/home/tfuser/tfenv/bin/pip install tensorflow[and-cuda]"
"""

# Snapshots
[vm.ml-tensorflow.snapshots]
enabled = true
schedule = "daily"
retention = 7
"""
